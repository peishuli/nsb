apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
            - containerPort: 5672
            - containerPort: 15672
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    service: rabbitmq
spec:
  ports:
  - name: "5672"
    port: 5672
    targetPort: 5672
  - name: "15672"
    port: 15672
    targetPort: 15672
  type: LoadBalancer
  selector:
    service: rabbitmq
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.0
        ports:
            - containerPort: 9200
            - containerPort: 9300
        env:
          - name: ES_JAVA_OPTS
            value: -Xmx256m -Xms256m 
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    service: elasticsearch
spec:
  ports:
  - name: "9200"
    port: 9200
    targetPort: 9200
  - name: "9300"
    port: 9300
    targetPort: 9300
  type: LoadBalancer
  selector:
    service: elasticsearch
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana-oss:6.3.0        
        ports:
            - containerPort: 5601
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    service: kibana
spec:
  ports:
  - name: "5601"
    port: 5601
    targetPort: 5601
  type: LoadBalancer
  selector:
    service: kibana
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sqldb
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: sqldb
    spec:
      containers:
      - name: sqldb
        image: microsoft/mssql-server-linux:2017-latest
        ports:
            - containerPort: 1433            
        env:
          - name: MSSQL_SA_PASSWORD
            value: Pass@word
          - name: ACCEPT_EULA
            value: "Y"
          - name: MSSQL_PID
            value: Developer
---
apiVersion: v1
kind: Service
metadata:
  name: sqldb
  labels:
    service: sqldb
spec:
  ports:
  - name: "1433"
    port: 1433
    targetPort: 1433
  type: LoadBalancer
  selector:
    service: sqldb
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.1.0
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus/"
        ports:
            - containerPort: 9090  
        volumeMounts:
        - mountPath: /etc/prometheus
          name: hostvol                  
      volumes: 
      - name: hostvol
        hostPath:
          path: ~/nsb-demo/prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    service: prometheus
spec:
  ports:
  - name: "9090"
    port: 9090
    targetPort: 9090
  type: LoadBalancer
  selector:
    service: prometheus
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        ports:
            - containerPort: 3000          
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    service: grafana
spec:
  ports:
  - name: "3000"
    port: 3000
    targetPort: 3000
  type: LoadBalancer
  selector:
    service: grafana